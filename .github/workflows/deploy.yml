name: Deploy to AWS Lightsail

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to Lightsail
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.LIGHTSAIL_IP }} << 'EOF'
          
          # Install Node.js and Yarn if they don't exist
          if ! type node > /dev/null 2>&1; then
            curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.1/install.sh | bash
            export NVM_DIR="$HOME/.nvm"
            [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
            nvm install stable
            nvm use stable
          fi

          if ! type yarn > /dev/null 2>&1; then
            npm install -g yarn
          fi

          # Ensure PM2 is installed
          if ! type pm2 > /dev/null 2>&1; then
            npm install -g pm2
          fi

          # Clone the repository if it does not exist
          if [ ! -d "~/kimkim" ]; then
            git clone https://github.com/estellechoi/kimkim.git ~/kimkim
          fi

          # Move to the project directory
          cd ~/kimkim

          # Pull latest changes
          git pull

          # Create or overwrite .env file with new variables
          {
            echo "NEXT_PUBLIC_BINANCE_API_ACCESS_KEY=${{ secrets.NEXT_PUBLIC_BINANCE_API_ACCESS_KEY }}"
            echo "NEXT_PUBLIC_BINANCE_API_SECRET_KEY=${{ secrets.NEXT_PUBLIC_BINANCE_API_SECRET_KEY }}"
            echo "NEXT_PUBLIC_BITGET_API_ACCESS_KEY=${{ secrets.NEXT_PUBLIC_BITGET_API_ACCESS_KEY }}"
            echo "NEXT_PUBLIC_BITGET_API_SECRET_KEY=${{ secrets.NEXT_PUBLIC_BITGET_API_SECRET_KEY }}"
            echo "NEXT_PUBLIC_BYBIT_API_ACCESS_KEY=${{ secrets.NEXT_PUBLIC_BYBIT_API_ACCESS_KEY }}"
            echo "NEXT_PUBLIC_BYBIT_API_SECRET_KEY=${{ secrets.NEXT_PUBLIC_BYBIT_API_SECRET_KEY }}"
            echo "NEXT_PUBLIC_COINMARKETCAP_API_KEY=${{ secrets.NEXT_PUBLIC_COINMARKETCAP_API_KEY }}"
            echo "NEXT_PUBLIC_COIN_GECKO_API_KEY=${{ secrets.NEXT_PUBLIC_COIN_GECKO_API_KEY }}"
            echo "NEXT_PUBLIC_EXCHANGE_RATE_API_KEY=${{ secrets.NEXT_PUBLIC_EXCHANGE_RATE_API_KEY }}"
            echo "NEXT_PUBLIC_FOREX_API_KEY=${{ secrets.NEXT_PUBLIC_FOREX_API_KEY }}"
            echo "NEXT_PUBLIC_HTX_API_ACCESS_KEY=${{ secrets.NEXT_PUBLIC_HTX_API_ACCESS_KEY }}"
            echo "NEXT_PUBLIC_HTX_API_SECRET_KEY=${{ secrets.NEXT_PUBLIC_HTX_API_SECRET_KEY }}"
            echo "NEXT_PUBLIC_MIXPANEL_TOKEN=${{ secrets.NEXT_PUBLIC_MIXPANEL_TOKEN }}"
            echo "NEXT_PUBLIC_UPBIT_OPEN_API_ACCESS_KEY=${{ secrets.NEXT_PUBLIC_UPBIT_OPEN_API_ACCESS_KEY }}"
            echo "NEXT_PUBLIC_UPBIT_OPEN_API_SECRET_KEY=${{ secrets.NEXT_PUBLIC_UPBIT_OPEN_API_SECRET_KEY }}"
            echo "NEXT_PUBLIC_BITHUMB_API_CONNECT_KEY=${{ secrets.NEXT_PUBLIC_BITHUMB_API_CONNECT_KEY }}"
            echo "NEXT_PUBLIC_BITHUMB_API_SECRET_KEY=${{ secrets.NEXT_PUBLIC_BITHUMB_API_SECRET_KEY }}"
          } > .env

          # Install dependencies and build the project
          yarn install
          yarn build

          # Start or restart the application using PM2
          pm2 describe kimkim > /dev/null
          if [ $? -ne 0 ]; then
            echo "Process not found, starting..."
            pm2 start yarn --name "kimkim" -- start
          else
            echo "Process found, restarting..."
            pm2 restart kimkim --update-env
          fi

          EOF
